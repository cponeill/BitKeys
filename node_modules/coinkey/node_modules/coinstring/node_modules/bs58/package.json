{
  "name": "bs58",
  "version": "0.3.0",
  "description": "Base58 check encoding",
  "keywords": [
    "crytography",
    "crypto",
    "bitcoin",
    "base58",
    "encoding",
    "decoding",
    "encode",
    "decode",
    "litecoin"
  ],
  "devDependencies": {
    "mocha": "1.*",
    "terst": "0.0.2",
    "binstring": "~0.2.0",
    "mochify": "~0.4.2"
  },
  "repository": {
    "url": "http://github.com/cryptocoinjs/bs58",
    "type": "git"
  },
  "main": "./lib/bs58.js",
  "dependencies": {
    "bigi": "0.2.0",
    "binstring": "~0.2.0"
  },
  "readme": "bs58\n===\n\nJavaScript component to compute [Base58](https://en.bitcoin.it/wiki/Base58Check_encoding) check encoding for Bitcoin. See this article for more details: [bitcoin address](http://procbits.com/2013/08/27/generating-a-bitcoin-address-with-javascript).\n\n\nUsage\n-----\n\n### Installation\n\n    npm install --save bs58\n\n### browser\n\nYou can use this module in the browser. Install [Browserify](https://github.com/substack/node-browserify):\n\n    npm install -g browserify\n\nthen run:\n\n    browserify < lib/bs58.js > lib/bs85.bundle.js\n\n\nApi\n---\n\n### encode(input)\n\n`input` can be either a hex string, an array of bytes, or a [Buffer](http://nodejs.org/api/buffer.html). It returns a `string`.\n\n**example (hex string)**:\n\n```js\nvar base58 = require('bs58');\n\nvar unencodedData = \"0x003c176e659bea0f29a3e9bf7880c112b1b31b4dc826268187\"; //<-- notice the \"0x\" prefix?\nvar out = base58.encode(unencodedData);\nconsole.log(out); // => 16UjcYNBG9GTK4uq2f7yYEbuifqCzoLMGS\"\n```\n\n** example (byte array)**:\n\n```js\nvar base58 = require('bs58');\nvar conv = require('binstring')\n\nvar unencodedData = \"003c176e659bea0f29a3e9bf7880c112b1b31b4dc826268187\";\nvar out = base58.encode(conv(unencodedData: {in: 'hex', out: 'bytes'}));\nconsole.log(out); // => 16UjcYNBG9GTK4uq2f7yYEbuifqCzoLMGS\"\n```\n\n** example (Buffer)**:\n\n```js\nvar base58 = require('bs58');\nvar conv = require('binstring')\n\nvar unencodedData = \"003c176e659bea0f29a3e9bf7880c112b1b31b4dc826268187\";\nvar out = base58.encode(conv(unencodedData: {in: 'hex', out: 'buffer'}));\nconsole.log(out); // => 16UjcYNBG9GTK4uq2f7yYEbuifqCzoLMGS\"\n```\n\n\n### decode(input)\n\n`input` must be a base 58 encoded string. Returns a `Buffer`.\n\n**exmample**:\n\n```js\nvar base58 = require('base58');\n\nvar address = \"16UjcYNBG9GTK4uq2f7yYEbuifqCzoLMGS\";\nvar out = base58.decode(address)\nconsole.log(out.toString('hex')); // => 003c176e659bea0f29a3e9bf7880c112b1b31b4dc826268187\n```\n\n\nCredits\n-------\n\nMost of the code from Stefan Thomas in https://github.com/bitcoinjs/bitcoinjs-lib\n\n\nLicense\n-------\n\n(MIT License)\n\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/cryptocoinjs/bs58/issues"
  },
  "homepage": "https://github.com/cryptocoinjs/bs58",
  "_id": "bs58@0.3.0",
  "_shasum": "cb48107bf446727d3e17b21102da73ca89109588",
  "_from": "bs58@0.3.x",
  "_resolved": "https://registry.npmjs.org/bs58/-/bs58-0.3.0.tgz"
}
